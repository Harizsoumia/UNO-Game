import javax.swing.*;
import java.awt.*;
//====================================classe du jpanel personalisée =============================================================================================
public class CustomPanel extends JPanel {
    
    private ImageIcon icon;
    
    public CustomPanel() {
        // Configuration du JPanel avec fond bleu ciel
        this.setBackground(new Color(135, 206, 235)); // Couleur bleu ciel (Sky Blue)
        this.setLayout(new FlowLayout(FlowLayout.RIGHT)); // Layout horizontal, aligné à gauche
        
        // Chargement et redimensionnement de l'icône
        try {
            ImageIcon originalIcon = new ImageIcon("C:\\Users\\manel\\OneDrive\\Images\\Screenshots\\logo.png");
            Image image = originalIcon.getImage();
            Image resizedImage = image.getScaledInstance(24, 24, Image.SCALE_SMOOTH);
            icon = new ImageIcon(resizedImage);
            
            // Ajout de l'icône au panel sous forme de JLabel
            JLabel iconLabel = new JLabel(icon);
            this.add(iconLabel);
            
            // Vous pouvez ajouter un texte après l'icône pour démontrer l'alignement horizontal
            JLabel textLabel = new JLabel("مرحب");
            textLabel.setForeground(Color.WHITE); // Texte en blanc pour contraste
            textLabel.setFont(new Font("Arial", Font.BOLD, 14));
            this.add(textLabel);
            
        } catch (Exception e) {
            System.out.println("Erreur lors du chargement de l'icône: " + e.getMessage());
        }
          // Ajouter un bouton de fermeture à la barre de titre
        JButton closeButton = new JButton("×");
        closeButton.setForeground(Color.WHITE);
        closeButton.setFont(new Font("Arial", Font.BOLD, 16));
        closeButton.setBorderPainted(false);
        closeButton.setContentAreaFilled(false);
        closeButton.setFocusPainted(false);
        closeButton.addActionListener(e -> System.exit(0));
        this.add(closeButton);
    }

   
}






//======================================class du jframe personaliséeees===================================================================================

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class CustomFrame extends JFrame {
    
    private NewClass titleBar; // Votre JPanel personnalisé existant
    private Point initialClick;
    
    public CustomFrame() {
        // Supprimer la décoration standard de fenêtre
        setUndecorated(true);
        
        // Initialiser le layout principal
        setLayout(new BorderLayout());
        
        // Instancier votre barre de titre personnalisée
        titleBar = new NewClass();
        
        // Ajouter la fonction de déplacement de fenêtre à votre barre de titre
        enableWindowDrag(titleBar);
        
      
        
        // Créer un panel pour le contenu principal
        JPanel contentPanel = new JPanel();
        contentPanel.setBackground(Color.WHITE);
        contentPanel.setLayout(new BorderLayout());
        contentPanel.add(new JLabel("Contenu de l'application", SwingConstants.CENTER), 
                BorderLayout.CENTER);
        
        // Ajouter une bordure pour l'effet visuel
        getRootPane().setBorder(BorderFactory.createLineBorder(new Color(100, 181, 246), 2));
        
        // Assembler la fenêtre
        add(titleBar, BorderLayout.NORTH);
        add(contentPanel, BorderLayout.CENTER);
        
        // Configurer la taille et la position
        setSize(800, 600);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }
    
    private void enableWindowDrag(JComponent component) {
        component.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                initialClick = e.getPoint();
            }
        });
        
        component.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                // Calculer le déplacement
                int thisX = getLocation().x;
                int thisY = getLocation().y;
                
                // Déterminer la distance de déplacement
                int xMoved = e.getX() - initialClick.x;
                int yMoved = e.getY() - initialClick.y;
                
                // Déplacer la fenêtre
                setLocation(thisX + xMoved, thisY + yMoved);
            }
        });
    }
